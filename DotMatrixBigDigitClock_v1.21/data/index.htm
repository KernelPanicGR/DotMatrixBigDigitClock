<!DOCTYPE html>
<html lang="el-GR">

<head>
	<title>DM Clock | Kernel Panic</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<meta name="description" content="Dot Matrix Web Clock">
	<meta name="author" content="Kernel Panic">
	<script src="script.js"></script>
	<link href="style.css" rel="stylesheet" type="text/css">
	<link href="favicon.ico" rel="icon" type="image/x-icon">
	<style>
		#GRdate {
			margin: auto;
			font-size: 6vw;
			color: #797979;
			text-align: center;
		}

		.time {
			font-size: 23vw;
			color: #f90;
			font-weight: bold;
			text-align: center;
			padding-top: 5%;
		}
	</style>
</head>

<body>
	<div class="container">
		<aside class="sidebar">
			<nav class="nav">
				<ul class="nav-items">
					<!--  <li class="nav-title">Menu</li>  -->
					<li><a class="active" href="index.htm"> <img src="img/home.svg" /></a></li>
					<li><a class="nav-link" href="info.html"><img src="img/info.svg" /></a></li>
					<li><a class="nav-link" href="weather.html"><img src="img/weather.svg" /></a></li>
					<li><a class="nav-link" href="brightness.html"><img src="img/brightness.svg" /></a></li>
					<li><a class="nav-link" href="edit"><img src="img/Edit.svg" /></a></li>
					<li><a class="nav-link" href="config.html"><img src="img/wifi.svg" /></a></li>
					<li><a class="nav-link" href="firmware.html"><img src="img/upload.svg" /></a></li>
					<div class="sidebar-separator"></div>
					<li><a class="nav-link" href="javascript:restartcpu();"><img src="img/reboot.svg" /></a></li>
				</ul>
			</nav>
		</aside>
		<div class="menubutton">
			<div class="bar"></div>
			<div class="bar"></div>
			<div class="bar"></div>
		</div>
	</div>
	<main class="main" role="main">
		<header>
			<h1 id="GRdate">00.00.00</h1>
		</header>
		<div class="time" id="xTime">00:00:00</div>
	</main>

	<script>
		// === Menu ===
		var container = document.querySelector(".container");
		var main = document.querySelector(".main");
		document.querySelector(".menubutton").addEventListener("click", toggleSidebar, false);

		container.addEventListener("click", function (e) {
			if (isShowingSidebar() && main.contains(e.target)) {
				e.preventDefault();
				hideSidebar();
			}
		}, true);

		// === Start ===
		function Start() {
			start ? StartPage() : document.getElementById('GRdate').innerHTML = "<span style='color:#d00;'>OFF Line </span>";
		}

		// === Get Time ===
		function StartPage() {
			tmp = ourURL.slice(chop);
			if ((idx = tmp.indexOf("/")) != -1) {
				ourHost = tmp.slice(0, idx);
				console.log("ourHost = " + ourHost);

				url = "ws://" + ourHost + "/time";
				console.log("url = " + url);

				// Connect to WebSocket server
				wsConnect(url);
			}
		}

		// Call this to connect to the WebSocket server
		function wsConnect(url) {

			// Connect to WebSocket server
			websocket = new WebSocket(url);

			// Assign callbacks
			websocket.onopen = function (evt) { onOpen(evt) };
			websocket.onclose = function (evt) { onClose(evt) };
			websocket.onmessage = function (evt) { onMessage(evt) };
			websocket.onerror = function (evt) { onError(evt) };
		}

		// Called when a WebSocket connection is established with the server
		function onOpen(evt) {
			// Log connection state
			console.log("Connected");
			doSend("{\"Time\": " + "\"index.htm\"}");
		}

		// Called when the WebSocket connection is closed
		function onClose(evt) {
			// Log disconnection state
			console.log("Disconnected");
			// Try to reconnect after a few seconds
			setTimeout(function () { wsConnect(url) }, 3000);
		}

		// Called when a message is received from the server
		function onMessage(evt) {
			// Print out our received message
			// console.log("Received: " + evt.data);
			obj = JSON.parse(evt.data);

			// === Ώρα ===
			if ("JsonTimeNow" in obj) {
				document.getElementById("xTime").innerHTML = obj.JsonTimeNow;
			}

			// === ημερομηνία ===
			if ("JsonDate" in obj) {
				var options = {
					weekday: 'long',
					year: 'numeric',
					month: 'long',
					day: 'numeric'
				};
				day = obj.JsonDate[0];
				month = obj.JsonDate[1];
				year = obj.JsonDate[2];
				let now = new Date(year, month - 1, day)
				let MyDate = now.toLocaleDateString("el-GR", options);
				document.getElementById("GRdate").innerHTML = MyDate;
			}
		}

		// Called when a WebSocket error occurs
		function onError(evt) {
			console.log("ERROR: " + evt.data);
		}

		// Sends a message to the server (and prints it to the console)
		function doSend(message) {
			console.log("Sending: " + message);
			websocket.send(message);
		}
	</script>
</body>

</html>